  - name: Set up SSH key
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_HOST: ${{ secrets.SERVER_IP }}
      SSH_USER: ${{ secrets.SERVER_USER }}
    run: |
      set -euo pipefail
      mkdir -p "$HOME/.ssh"
      chmod 700 "$HOME/.ssh"

      if [ -z "${SSH_PRIVATE_KEY:-}" ]; then
        echo "ERROR: SSH_PRIVATE_KEY secret is not set"
        exit 1
      fi
      printf "%s\n" "$SSH_PRIVATE_KEY" > "$HOME/.ssh/id_rsa"
      chmod 600 "$HOME/.ssh/id_rsa"

      if [ -z "${SSH_HOST:-}" ]; then
        echo "ERROR: SERVER_IP secret is not set"
        exit 1
      fi

      if ! command -v ssh-keyscan >/dev/null 2>&1; then
        echo "ERROR: ssh-keyscan is not available on the runner"
        exit 1
      fi

      # Add host key (short timeout to avoid hanging)
      if ! timeout 10 ssh-keyscan -H "$SSH_HOST" >> "$HOME/.ssh/known_hosts" 2>/dev/null; then
        echo "ssh-keyscan failed for $SSH_HOST â€” check DNS/firewall or correct secret value"
        exit 1
      fi
      chmod 644 "$HOME/.ssh/known_hosts"

  - name: Run test playbook remotely (install Ansible if needed)
    env:
      SSH_HOST: ${{ secrets.SERVER_IP }}
      SSH_USER: ${{ secrets.SERVER_USER }}
    run: |
      set -euo pipefail

      SSH_USER=${SSH_USER:-ubuntu}
      SSH_HOST=${SSH_HOST:?SSH_HOST must be set}
      SSH_KEY="$HOME/.ssh/id_rsa"

      # quick connectivity check
      if ! timeout 10 ssh -i "$SSH_KEY" -o BatchMode=yes -o StrictHostKeyChecking=yes -o ConnectTimeout=10 "${SSH_USER}@${SSH_HOST}" 'echo connected' >/dev/null 2>&1; then
        echo "ERROR: Unable to SSH to ${SSH_USER}@${SSH_HOST}. Check network, firewall, and secret values."
        exit 1
      fi

      ssh -i "$SSH_KEY" -tt -o StrictHostKeyChecking=yes "${SSH_USER}@${SSH_HOST}" <<'EOF'
        set -euo pipefail
        export DEBIAN_FRONTEND=noninteractive

        if ! command -v ansible-playbook >/dev/null 2>&1; then
          sudo apt-get update -y
          sudo apt-get install -y ansible
        fi

        cat > /tmp/test-playbook.yml <<'PLAY'
        ---
        - name: Test Ansible connectivity and file creation
          hosts: localhost
          become: yes
          tasks:
            - name: Create a test file
              file:
                path: /tmp/ansible-test-success.txt
                state: touch
        PLAY

        ansible-playbook /tmp/test-playbook.yml
        ls -l /tmp/ansible-test-success.txt || true
      EOF
